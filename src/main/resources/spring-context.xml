<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
						http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.3.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">
						
	<!-- 注解方式，搜索model，搜索service，搜索dao -->
	<context:component-scan base-package="com.eavinlau"/>
	
	<context:property-placeholder location="classpath:jdbc.properties"/>	
	
    <context:annotation-config />  
    
    <!-- 配置ehcahe缓存管理器    
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
        <property name="configLocation" value="classpath:ehcache.xml" />  
    </bean>  
    -->
    <!-- 配置缓存工厂bean对象    
    <bean id="methodCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">  
        <property name="cacheManager" ref="cacheManager" />  
        <property name="cacheName" value="mobileCache" />  
    </bean>  
    -->
    <!-- 配置一个缓存拦截器对象，处理具体的缓存业务   
    <bean id="methodCacheInterceptor" class="com.eavinlau.framework.intercept.MethodCacheInterceptor">  
        <property name="cache" ref="methodCache" />  
    </bean> 
    -->
    <!-- 配置缓存拦截器目录 
    <aop:config>  
        <aop:aspect ref="methodCacheInterceptor">  
            <aop:pointcut id="methodpointcut" expression="execution(* com.eavinlau.project.service.*.get*(..))"/>  
            <aop:around method="doAround"  pointcut-ref="methodpointcut"/>  
        </aop:aspect>  
    </aop:config>    
    -->   
    
	<!-- 数据源 com.alibaba.druid.pool.DruidDataSource -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
	    <property name="driverClassName" value="${jdbc.driver}" />
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="validationQuery" value="SELECT 1" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="1" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="5" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<!-- 开启Druid的监控统计功能 -->
		<property name="filters" value="stat" />
	</bean>			

	<!-- 本地会话工程bean，是spring整合mybatis的核心 入口 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:/mappings/*/*.xml"/>
		<!-- 
        <property name="typeAliasesPackage" value="com.eavinlau"/>
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
         -->
    </bean>
	
	<!--  
	-->
         
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.eavinlau" />
	</bean>
	
	<!-- 在service层上实现事务管理，实现平台无关 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 声明使用注解式事务 -->  
	<tx:annotation-driven transaction-manager="txManager"/>  

</beans>